#! /bin/sh

# first we need to publish the exported trait locally
sbt ls-exports/publishLocal

# Now we will create a list of dependencies for both the ls-exports 
# under ~/.functions-remote-config/.local . These text file is read by the isolated classloader when invoking ls-receiver.
scala-cli scripts2.13 scripts2.13/import-dependencies-for-exports.sc

# Now we will generate the code for LsFunctions
scala-cli scripts scripts/ls-receiver.sc
scala-cli scripts scripts/ls-caller.sc

# Now we can build the generated classes and receiver and publish it
sbt ls-receiver/publishLocal

# We need a list of jars for the receiver for the isolated classloader to be able to load them
scala-cli scripts2.13 scripts2.13/import-dependencies-for-receiver.sc

# Finally we are ready to call it via ls-caller.
sbt "-Dfunctions.debug" "ls-caller/runMain example.callLsFunctionViaAvroSerialization"
